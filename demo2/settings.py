"""
Django settings for demo2 project.

Generated by 'django-admin startproject' using Django 5.2.1.
Updated for modern Django with WhiteNoise and static file fixes.
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-oo1@wmf74nb4t(4klqa##y%=t*@9u4put8#6_)-jwc&jjsgrbh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['dev.davislegacysoccer.org', 'localhost', '127.0.0.1']

import os
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')
CSRF_TRUSTED_ORIGINS = os.getenv('CSRF_TRUSTED_ORIGINS', 'https://localhost').split(',')
# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'reservations',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'demo2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'reservations.context.auth.auth_groups',
                'reservations.context.navigation.sidebar',
                'reservations.context.navigation.site_context',
                'reservations.context.navigation.colorizer',
            ],
        },
    },
]

WSGI_APPLICATION = 'demo2.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME', 'demo2_db'),
        'USER': os.environ.get('DB_USER', 'demo2_user'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'demo2_pass'),
        'HOST': os.environ.get('DB_HOST', 'db'),
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'
STATICFILES_DIRS = [
    BASE_DIR / 'staticfiles',
]

# WhiteNoise configuration for static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Reservation system specific settings
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
RESERVATION_TOKEN_TIMEOUT = 900  # 15 minutes

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
}

# Email backend for development
# Email settings from Demo
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'reservation@davislegacysoccer.org'
EMAIL_HOST_PASSWORD = 'qsspoldzbroodlgj'
SERVER_EMAIL = 'reservation@davislegacysoccer.org'
EMAIL_SUBJECT_PREFIX = '[Davis Legacy Reservation System] '


# Login/Logout URLs
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'  # Redirect to dashboard after login
LOGOUT_REDIRECT_URL = '/'  # Redirect to dashboard after logout

# Time input formats - support both 24-hour and 12-hour formats
TIME_INPUT_FORMATS = [
    '%H:%M:%S',      # 14:30:00
    '%H:%M:%S.%f',   # 14:30:00.000000  
    '%H:%M',         # 14:30
    '%I:%M %p',      # 2:30 PM
    '%I:%M:%S %p',   # 2:30:00 PM
]

# Django 5.2 CSRF Configuration for AJAX
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'
CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_USE_SESSIONS = False

# Django 5.2+ Security Settings for Logout
LOGOUT_REDIRECT_URL = '/'
LOGOUT_ON_GET = False  # Enforce POST-only logout (Django 5.2+)
LOGOUT_ON_GET = True

# Match AWS Django 5.2.2 behavior
USE_L10N = True


# Explicit date input formats
DATE_INPUT_FORMATS = [
    '%Y-%m-%d',      # 2025-08-15
    '%m/%d/%Y',      # 08/15/2025
    '%d/%m/%Y',      # 15/08/2025
    '%m-%d-%Y',      # 08-15-2025
    '%d-%m-%Y',      # 15-08-2025
]
