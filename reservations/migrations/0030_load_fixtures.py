# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-03 22:14
from __future__ import unicode_literals

from django.db import migrations
from django.core.management import call_command
import os

def load_fixtures(apps, schema_editor):
    User = apps.get_model("auth", "User")
    Group = apps.get_model("auth", "Group")
    WebsiteSetting = apps.get_model("reservations", "WebsiteSetting")

    fixtures_dir = os.path.abspath(os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'fixtures/'))
    group_fixtures = os.path.join(fixtures_dir, 'groups.json')
    setting_fixtures = os.path.join(fixtures_dir, 'website_settings.json')

    if Group.objects.all().count() == 0:
        call_command('loaddata', group_fixtures)

        users = User.objects.all()

        superuser_group = Group.objects.get(name='Superuser')
        team_group = Group.objects.get(name='Team')

        for user in users.iterator():
            if user.is_superuser:
                user.groups.add(superuser_group)
            else:
                user.groups.add(team_group)

    if WebsiteSetting.objects.all().count() == 0:
        call_command('loaddata', setting_fixtures)

def unload_fixtures(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    WebsiteSetting = apps.get_model("reservations", "WebsiteSetting")

    Group.objects.all().delete()
    WebsiteSetting.objects.all().delete()

class Migration(migrations.Migration):
    dependencies = [
        ('reservations', '0029_auto_20160803_1116'),
    ]

    operations = [
        migrations.RunPython(load_fixtures, reverse_code=unload_fixtures)
    ]
